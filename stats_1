import requests
import pandas as pd
import numpy as np

url = 'https://raw.githubusercontent.com/obulygin/pyda_homeworks/master/statistics_basics/horse_data.csv'

response = requests.get(url).content.decode('utf-8')

# Задание 1

df = pd.read_csv(url, names=['surgery?', 'Age', 'Hospital Number', 'rectal temperature', 'pulse', 'respiratory rate', 'temperature of extremities', 'peripheral pulse', 'mucous membranes', 'capillary refill time', 'pain', 'peristalsis', 'abdominal distension', 'nasogastric tube', 'nasogastric reflux', 'nasogastric reflux PH', 'rectal examination', 'abdomen', 'packed cell volume', 'total protein', 'abdominocentesis appearance', 'abdomcentesis total protein', 'outcome', 'surgical lesion?', 'type of lesion1', 'type of lesion2', 'type of lesion3', 'cp_data'], usecols=['surgery?', 'Age', 'rectal temperature', 'pulse', 'respiratory rate', 'temperature of extremities', 'pain', 'outcome'], na_values=['N/A', 'missing', 'NA', '?', '-'], header=None)

# В столбце Age могут быть только значения 1 и 2, в нашем случае есть также 9, заменил его на NaN - увидел в describe()
df.loc[df['Age'] == 9, 'Age'] = np.nan

print(df.info())
print(df.describe())

# Задание 2

#расчеты q1 и q3
q1_temp = df['rectal temperature'].quantile(0.25)
q3_temp = df['rectal temperature'].quantile(0.75)

q1_pulse = df['pulse'].quantile(0.25)
q3_pulse = df['pulse'].quantile(0.75)

q1_resp = df['respiratory rate'].quantile(0.25)
q3_resp = df['respiratory rate'].quantile(0.75)

#расчеты iqr
iqr_temp = q3_temp - q1_temp
iqr_pulse = q3_pulse - q1_pulse
iqr_resp = q3_resp - q1_resp

#расчеты верхней нижней границ выбросов
lower_bound_temp = q1_temp - 1.5 * iqr_temp
upper_bound_temp = q3_temp + 1.5 * iqr_temp
lower_bound_pulse = q1_pulse - 1.5 * iqr_pulse
upper_bound_pulse = q3_pulse + 1.5 * iqr_pulse
lower_bound_resp = q1_resp - 1.5 * iqr_resp
upper_bound_resp = q3_resp + 1.5 * iqr_resp

#расчеты выбросов
outliers_temp = df[(df['rectal temperature'] < lower_bound_temp) | (df['rectal temperature'] > upper_bound_temp)]
outliers_pulse = df[(df['pulse'] < lower_bound_pulse) | (df['pulse'] > upper_bound_pulse)]
outliers_resp = df[(df['respiratory rate'] < lower_bound_resp) | (df['respiratory rate'] > upper_bound_resp)]

print("Выбросы в столбце 'rectal temperature': ")
print(outliers_temp)

print("\nВыбросы в столбце 'pulse': ")
print(outliers_pulse)

print("\nВыбросы в столбце 'respiratory rate': ")
print(outliers_resp)

# Задание 3

print(df.isna().sum())

# Заполняем через группировки по категориям в зависимости от операции
df['rectal temperature'] = df['rectal temperature'].fillna(df.groupby('surgery?')['rectal temperature'].transform('median'))
df['pulse'] = df['pulse'].fillna(df.groupby('surgery?')['pulse'].transform('median'))
df['respiratory rate'] = df['respiratory rate'].fillna(df.groupby('surgery?')['respiratory rate'].transform('median'))

# # Заполняем пропуски в столбцах temperature of extremities и pain модой, c группировкой по операции 

df['temperature of extremities'] = df['temperature of extremities'].fillna(df.groupby('surgery?')['temperature of extremities'].transform(lambda x: x.mode()[0]))
df['pain'] = df['pain'].fillna(df.groupby('surgery?')['pain'].transform(lambda x: x.mode()[0]))
df['surgery?'] = df['surgery?'].fillna(df.groupby('pain')['surgery?'].transform(lambda x: x.mode()[0]))
df['outcome'] = df['outcome'].fillna(df.groupby('surgery?')['outcome'].transform(lambda x: x.mode()[0]))
df['Age'] = df['Age'].fillna(df.groupby('surgery?')['Age'].transform(lambda x: x.mode()[0]))

print(df.isna().sum())
